[versions]
kotlin = "1.8.21"
kotlinxCoroutines = "1.6.4"
kotest = "5.6.1"
ktor = "2.3.0"
jackson = "2.14.2"
hoplite = "2.7.4"
cohort = "1.7.3"
micrometer = "1.10.6"

dockerBaseImage = "amazoncorretto:17.0.5-alpine"

[libraries]
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinxCoroutines" }

ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }

ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-hsts = { module = "io.ktor:ktor-server-hsts", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }

kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }

kotest-extensions-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version = "1.3.4" }
kotest-extensions-httpstub = { module = "io.kotest.extensions:kotest-extensions-httpstub", version = "1.0.1" }

testcontainers-postgresql = { module = "org.testcontainers:postgresql", version = "1.18.0" }

kotlin-logging = { module = "io.github.microutils:kotlin-logging", version = "3.0.5" }
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.4.4" }
slf4j-api = { module = "org.slf4j:slf4j-api", version = "2.0.7" }

tabby = { module = "com.sksamuel.tabby:tabby-fp", version = "2.2.3" }

jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
hoplite-aws = { module = "com.sksamuel.hoplite:hoplite-aws", version.ref = "hoplite" }
hoplite-micrometer-datadog = { module = "com.sksamuel.hoplite:hoplite-micrometer-datadog", version.ref = "hoplite" }

cohort-core = { module = "com.sksamuel.cohort:cohort-core", version.ref = "cohort" }
cohort-kafka = { module = "com.sksamuel.cohort:cohort-kafka", version.ref = "cohort" }
cohort-hikari = { module = "com.sksamuel.cohort:cohort-hikari", version.ref = "cohort" }
cohort-ktor2 = { module = "com.sksamuel.cohort:cohort-ktor2", version.ref = "cohort" }
cohort-micrometer = { module = "com.sksamuel.cohort:cohort-micrometer", version.ref = "cohort" }

micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometer-registry-datadog = { module = "io.micrometer:micrometer-registry-datadog", version.ref = "micrometer" }

postgresql = { module = "org.postgresql:postgresql", version = "42.6.0" }
hikari = { module = "com.zaxxer:HikariCP", version = "5.0.1" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version = "6.0.8" }
flyway-core = { module = "org.flywaydb:flyway-core", version = "9.17.0" }

[bundles]
cohort = [
   "cohort-core",
   "cohort-kafka",
   "cohort-hikari",
   "cohort-ktor2",
   "cohort-micrometer"
]
hoplite = [
   "hoplite-core",
   "hoplite-yaml",
   "hoplite-aws",
   "hoplite-micrometer-datadog"
]
kotlinx-coroutines = [
   "kotlinx-coroutines-core",
   "kotlinx-coroutines-jdk8"
]
kotest = [
   "kotest-framework-datatest",
   "kotest-runner-junit5",
   "kotest-assertions-core",
   "kotest-property",
   "kotest-extensions-httpstub"
]
testcontainers = [
   "kotest-extensions-testcontainers",
   "testcontainers-postgresql"
]
logging = [
   "kotlin-logging",
   "logback-classic",
   "slf4j-api"
]
jackson = [
   "jackson-datatype",
   "jackson-module-kotlin"
]
ktor-server = [
   "ktor-server-netty",
   "ktor-server-compression",
   "ktor-server-content-negotiation",
   "ktor-server-metrics-micrometer",
   "ktor-server-default-headers",
   "ktor-server-cors",
   "ktor-server-hsts"
]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
